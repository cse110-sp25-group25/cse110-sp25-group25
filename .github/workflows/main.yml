name: CI 

on:
  push:
    branches:
      - main # only run on direct pushes to main
  pull_request:
    # run on all PRs

jobs: 
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Dependencies
        run: npm install
      - name: Unit tests + coverage
        run: | 
          JEST_JUNIT_OUTPUT=docs/coverage/junit.xml \
          npm test --coverage \
          --coverageReporters=lcov --coverageReporters=cobertura
      - name: Upload test reports
        uses: actions/upload-artifact@v4
        with:
          name: tests-reports
          path: |
            docs/coverage/junit.xml
            docs/coverage/cobertura-coverage.xml
          if-no-files-found: error
    
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install modules
      run: npm install
    - name: Run ESLint
      run: npx eslint . --ignore-pattern docs/ -f @microsoft/eslint-formatter-sarif -o eslint.sarif
    - name: Upload reports
      uses: actions/upload-artifact@v4
      with:
        name: lint-reports
        path: eslint.sarif

  validate-html:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Validate markup with Nu HTML Checker
        uses: Cyb3r-Jak3/html5validator-action@v7.2.0   
        with:
          root: .               
          format: json                # machine-readable
          css: true  
          blacklist: docs 
          extra: --log-file html5.json

      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: html5.json
          if-no-files-found: warn

  jsdoc:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Install modules
        run: npm install

      - name: Run JSDoc
        run: npx jsdoc ./js -r -d ./docs/jsdoc

  quality-monitor:
    runs-on: ubuntu-latest
    needs: [tests, lint, validate-html]
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write
      checks: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: .
      - name: Quality Monitor summary
        uses: uhafner/quality-monitor@v1
        with:
          pr-number:    ${{ github.event.pull_request.number }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          config: |
            {
              "analysis": [
                { "name": "Style", "tools": [
                  { "id": "sarif", "pattern": "**/*.sarif" }
                ]}
              ],
              "coverage": [
                { "name": "Line Coverage",
                  "tools": [
                    { "id": "cobertura",
                      "metric": "LINE",
                      "pattern": "**/coverage/cobertura-coverage.xml" }
                  ]}
              ]
            }
